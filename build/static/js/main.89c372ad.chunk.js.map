{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Person.js","components/PersonDisplay.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","nameValue","nameHandler","numberValue","numberHandler","submit","onSubmit","value","onChange","type","Filter","text","handleChange","Person","person","handleClick","name","number","onClick","id","PersonDisplay","personsList","map","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","style","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","setStyle","useEffect","personsService","returnedPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","some","window","confirm","newPerson","setTimeout","returnedPerson","updatePerson","find","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89c372ad.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ nameValue, nameHandler, numberValue, numberHandler, submit }) => {\n  return (\n      <form onSubmit={submit}>\n        <div>\n          name: <input\n                  value={nameValue}\n                  onChange={nameHandler}\n                />\n        </div>\n        <div>\n          number: <input\n                    value={numberValue}\n                    onChange={numberHandler}\n                  />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({ text, handleChange }) => {\n  return (\n    <form>\n      Filter shown contacts <input value={text} onChange={handleChange} />\n    </form>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = ({ person, handleClick }) => {\n  return (\n    <div>\n      {person.name} {person.number}\n      <button onClick={() => handleClick(person.id)}>delete</button>\n    </div>\n  )\n}\n\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst PersonDisplay = ({ personsList, handleClick }) => {\n  return (\n    <div>\n      {personsList.map((person) =>\n        <Person key={person.id} person={person} handleClick={handleClick} />\n      )}\n    </div>\n  )\n}\n\nexport default PersonDisplay","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteItem = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, deleteItem }\n","const Notification = ({ message, style }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={style}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport PersonDisplay from './components/PersonDisplay'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ style, setStyle ] = useState('success')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(returnedPersons => {\n        setPersons(returnedPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const target = persons.find(person => person.id === id)\n    if (window.confirm(`Are you sure you want to delete ${target.name}?`)) {\n      personsService.deleteItem(id)\n      setPersons(persons.filter(person => person.id !== id))\n      setStyle('success')\n      setErrorMessage(`Removed ${target.name}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2000)\n    }\n  }\n\n  const updatePerson = (id, newPerson) => {\n    const persons = personsService.getAll()\n    if (!(id in persons)) {\n      setErrorMessage(`Person ${newPerson.name} has already been removed!`)\n      setStyle('error')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2000)\n    }\n    personsService.update(id, newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n          setStyle('success')\n          setErrorMessage(`Updated ${newPerson}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2000)\n      })\n  }\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(newFilter.toLowerCase())\n  )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already included in the phonebook. Would you like to update their number?`)) {\n        const targetId = persons.find(person => person.name === newName)\n        updatePerson(targetId.id, personObject)\n        return\n      }\n      return\n    }\n    personsService\n      .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          console.log(`Added ${newName}`)\n          setStyle('success')\n          setErrorMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2000)\n        })\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter text={newFilter} handleChange={handleFilterChange} />\n      <Notification message={errorMessage} style={style}/>\n      <h2>Add a new contact</h2>\n      <PersonForm nameValue={newName}\n                  nameHandler={handleNameChange}\n                  numberValue={newNumber}\n                  numberHandler={handleNumberChange}\n                  submit={addPerson}\n      />\n      <h2>Numbers</h2>\n      <PersonDisplay personsList={personsToShow} handleClick={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}